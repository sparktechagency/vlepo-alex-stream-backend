import catchAsync from '../../../shared/catchAsync';
import { DashboardService } from './dashboard.service';
import { StatusCodes } from 'http-status-codes';
import sendResponse from '../../../shared/sendResponse';
import { Request, Response } from 'express';

const getTotalViewerCountWithGrowthRate = catchAsync(async(req: Request, res: Response) => {
  const  result = await DashboardService.getTotalViewerCountWithGrowthRate();
  sendResponse(res, {
    success: true,
    statusCode: StatusCodes.OK,
    message: 'Total viewer count with growth rate retrieved successfully',
    data: result,
  });
});


const getUserEngagement = catchAsync(async(req: Request, res: Response) => {
  const {year} = req.params;
  const  result = await DashboardService.getUserEngagementData(year);
  sendResponse(res, {
    success: true,
    statusCode: StatusCodes.OK,
    message: 'User engagement retrieved successfully',
    data: result,
  });

});


const getViewsAndCreatorCount = catchAsync(async(req: Request, res: Response) => {
  const {year} = req.params;
  const  result = await DashboardService.getViewsAndCreatorCount(year);
  sendResponse(res, {
    success: true,
    statusCode: StatusCodes.OK,
    message: 'Viewers count retrieved successfully',
    data: result,
  });
});


const getEventStat=catchAsync(async(req: Request, res: Response) => {
  const {year} = req.params;
  const  result = await DashboardService.getEventStat(year);
  sendResponse(res, {
    success: true,
    statusCode: StatusCodes.OK,
    message: 'Event stat retrieved successfully',
    data: result,
  });
});

export const DashboardController = {
  getTotalViewerCountWithGrowthRate,
  getUserEngagement,
  getViewsAndCreatorCount,
  getEventStat
}